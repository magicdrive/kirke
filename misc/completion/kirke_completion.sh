# kirke command completion for both Zsh and Bash

_kirke_completions() {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    opts="
        -h --help
        -v --version
        -n --name
        -f --file
        -a --null-as
        -j --json
        -p --pipe
        --pointer --pointer-struct
        --pager --auto-pager
        -o --outline
        -i --inline
    "

    # Completion logic for specific options
    case "$prev" in
        -n|--name)
            COMPREPLY=( $(compgen -W "root struct name" -- "$cur") )
            return 0
            ;;
        -f|--file)
            COMPREPLY=( $(compgen -f -- "$cur") )
            return 0
            ;;
        -a|--null-as)
            COMPREPLY=( $(compgen -W "interface{} int string bool *string *int *bool" -- "$cur") )
            return 0
            ;;
        -j|--json)
            COMPREPLY=( $(compgen -W "JSON string" -- "$cur") )
            return 0
            ;;
        --pointer|--pointer-struct|--pager|--auto-pager)
            COMPREPLY=( $(compgen -W "on off" -- "$cur") )
            return 0
            ;;
    esac

    # Provide general options and argument suggestions
    if [[ ${cur} == -* ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- "$cur") )
        return 0
    fi

    # Provide argument suggestions
    COMPREPLY=( $(compgen -W "root-name json-file json-string null-type-name" -- "$cur") )
    return 0
}

# Register completion function for Bash
if [ -n "$BASH_VERSION" ]; then
    complete -F _kirke_completions kirke
fi

# Register completion function for Zsh
if [ -n "$ZSH_VERSION" ]; then
    _kirke_zsh_completions() {
        _arguments -C \
            '(-h --help)'{-h,--help}'[Show help message and exit]' \
            '(-v --version)'{-v,--version}'[Show version]' \
            '(-n --name)'{-n,--name}'[Specify the RootStruct name (default: AutoGenerated)]:Root struct name:' \
            '(-f --file)'{-f,--file}'[Specify the input JSON file]:JSON file:_files' \
            '(-a --null-as)'{-a,--null-as}'[Specify the null-type name (default: interface{})]:Null type name:' \
            '(-j --json)'{-j,--json}'[Specify the JSON string]:JSON string:' \
            '(-p --pipe)'{-p,--pipe}'[Receive JSON from a pipe (default: false)]' \
            '(- --pointer --pointer-struct)'{--pointer,--pointer-struct}'[Define struct and array fields as pointers (default: off)]:on|off:(on off)' \
            '(- --pager --auto-pager)'{--pager,--auto-pager}'[Use a pager even if output is large (default: "on")]:on|off:(on off)' \
            '(-o --outline)'{-o,--outline}'[Output in outline mode (default: true)]' \
            '(-i --inline)'{-i,--inline}'[Output in inline mode (default: false)]' \
            '*:: :->args'
    }

    compdef _kirke_zsh_completions kirke
fi

