Usage: kirke [OPTIONS] [ARGUMENTS]

Description:
   Kirke is a yet another command-line tool for converting JSON strings into Golang struct definitions.
   Itâ€™s designed to be flexible, allowing for JSON input from both files and pipes,
   and it handles pointer types for nested structures when specified.

Options:
  -h, --help                      Show this help message and exit
  -v, --version                   Show version.
  -n, --name <root-name>          Specify the RootStruct name (default: AutoGenerated)
  -f, --file <json-file>          Specify the input .json file
  -a, --null-as <null-type-name>  Specify the null-type name. (default: interface{})
  -j, --json <json-string>        Specify the json string
  -p, --pipe                      Receive JSON from a pipe instead of a direct argument above all else. (default: false)
  --with-pointer                  Defines struct and array fields as pointers. Only valid for with --outline. (default: false)
  --outline                       Specify output mode. Defines struct and array fields as outline struct. (default: true)
  --inline                        Specify output mode. Defines struct and array fields as inline struct. (default: false)
  --no-pager                      Does not use a pager even if the output size is larger than the terminal. (default: false)

Arguments:
  <root-name>                  Used as the name of the root struct in the output. Automatically converted to camel case.
  <json-file>                  A file containing a JSON string. It will be read even if the extension is not .json.
  <json-string>                Direct JSON string input.
  <null-type-name>             The type name used to replace `null` type from json.

Examples:
    ex1)
        kirke -j '{"key": "value"}' --no-pager --name MyStruct
    ex2)
        kirke -f ./path/to/example.json --name MyExample
    ex3)
        echo '{"key": "value"}' | kirke --pipe --with-pointer
    ex4)
        echo '{"key": "value"}' | kirke --pipe --with-pointer -j '{"key2": "value2"}'
    ex5)
        echo '{"key": "value", "obj": {"num": 1} }' | kirke -a "*string"


See Also:
  https://github.com/magicdrive/kirke/README.md

